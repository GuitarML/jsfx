desc:Stereo Alignment Delay (by Geraint Luff)

in_pin:Left
in_pin:Right
out_pin:Left
out_pin:Right

slider1:delay_ms_l=0<0,250,0.1>-Left delay (ms)
slider2:delay_ms_r=<0,250,0.1>-Right delay (ms)
slider3:delay_linked=0<0,1,1{no,yes}>-Linked
slider4:display_units_in_samples=0<0,1,1{ms,samples}>-Units

import ui-lib.jsfx-inc

@init

MAX_DELAY = 0.25;

freemem = ui_setup(0);
buffer_length = ceil(srate*MAX_DELAY + 100);
freemem = (buffer0 = freemem) + buffer_length;
freemem = (buffer1 = freemem) + buffer_length;
buffer_index = 0;

gain = 0;
gain_step = 0;

delay_fftsize = 2048;
delay_bufferlength = delay_fftsize;
freemem = (delay_bufferA = freemem) + delay_bufferlength*2;
freemem = (delay_bufferB = freemem) + delay_bufferlength*2;
freemem = (delay_bufferSum = freemem) + delay_bufferlength;

i = 0;
while (i < delay_bufferlength) (
	delay_bufferA[i] = delay_bufferB[i] = 0;
	i += 1;
);

@block

new_delay_samples_l = floor(delay_ms_l*srate*0.001 + 0.5);
new_delay_samples_r = floor(delay_ms_r*srate*0.001 + 0.5);

delay_samples_l != new_delay_samples_l || delay_samples_r != new_delay_samples_r ? (
	gain <= 0 ? (
		// We've already faded out - update
		delay_samples_l = new_delay_samples_l;
		delay_samples_r = new_Delay_samples_r;
		gain_step = 1/samplesblock;
	) : (
		gain_step = -1/samplesblock;
	);
	gain += gain_step;
) : (
	gain_step = (1 - gain)/samplesblock;
);

@sample

function perform_delay_analysis() local(i, ratio, window, rA, iA, rB, iB, mag2, mag, factor, max_abs, max_index, max_phase) (
	action_delay_analysis_reset ? (
		i = 0;
		while (i < delay_bufferlength) (
		  delay_bufferSum[i] = 0;
		  i += 1;
		);
		action_delay_analysis_reset = 0;
	);

	ratio = (delay_bufferindex/delay_bufferlength);
	window = 0.5 - 0.5*cos(ratio*2*$pi);

	delay_bufferA[delay_bufferindex*2] = spl0*window;
	delay_bufferA[delay_bufferindex*2 + 1] = 0;
	delay_bufferB[delay_bufferindex*2] = spl1*window;
	delay_bufferB[delay_bufferindex*2 + 1] = 0;

	delay_bufferindex += 1;
	delay_bufferindex >= delay_bufferlength ? (
		delay_bufferindex = 0;

		fft(delay_bufferA, delay_fftsize);
		fft(delay_bufferB, delay_fftsize);
		i = 0;
		while (i < delay_bufferlength) (
			rA = delay_bufferA[2*i];
			iA = delay_bufferA[2*i + 1];
			rB = delay_bufferB[2*i];
			iB = delay_bufferB[2*i + 1];
			mag2 = (rA*rA + iA*iA)*(rB*rB + iB*iB);
			mag = sqrt(mag2);
			factor = 1/(max(mag, 0.000001))/delay_fftsize;
			delay_bufferA[2*i] = (rA*rB + iA*iB)*factor;
			delay_bufferA[2*i + 1] = (-rA*iB + iA*rB)*factor;
			i += 1;
		);
		ifft(delay_bufferA, delay_fftsize);

		max_abs = 0;
		max_phase = 1;
		max_index = 0;

		i = 0;
		while (i < delay_bufferlength) (
			i2 = (i + delay_bufferlength/2)%delay_bufferlength;
			value = delay_bufferSum[i2] += delay_bufferA[2*i];
			abs(value) >= max_abs ? (
				max_abs = abs(delay_bufferSum[i2]);
				max_index = i;
				max_phase = delay_bufferSum[i2] < 0 ? -1 : 1;
			);
			i += 1;
		);

		delay_samples = max_index;
		delay_samples > delay_bufferlength/2 ? (
			delay_samples -= delay_bufferlength;
		);
		delay_phase = max_phase;
	);
);

delay_analysis_active ? (
	perform_delay_analysis();
);

buffer0[buffer_index] = spl0;
buffer1[buffer_index] = spl1;

delayed_l = buffer_index - delay_samples_l;
delayed_l < 0 ? delayed_l += buffer_length;
delayed_r = buffer_index - delay_samples_r;
delayed_r < 0 ? delayed_r += buffer_length;

spl0 = buffer0[delayed_l]*gain;
spl1 = buffer1[delayed_r]*gain;
gain += gain_step;

buffer_index += 1;
buffer_index >= buffer_length ? buffer_index = 0;

@gfx 430 300

DIAL_HEIGHT = 50;

delay_analysis_active = (ui_screen() == "delay-analysis");

function titleabove(text) (
	ui_push_above(DIAL_HEIGHT);
		ui_align(0.5, 0.9);
		ui_text(text);
	ui_pop();
);

function readoutbelow(number, pattern) (
	ui_push_below(DIAL_HEIGHT);
		ui_align(0.5, 0.1);
		ui_textnumber(number, pattern);
	ui_pop();
);

function delaydial(delayms, title) local(samples) (
	titleabove(title);

	ui_push_height(DIAL_HEIGHT);
		delayms = control_dial(delayms, 0, MAX_DELAY*1000, 6);
	ui_pop();

	display_units_in_samples ? (
		samples = floor(delayms*srate*0.001 + 0.5);
		readoutbelow(samples, "%i ");
	) : (
		readoutbelow(delayms + 0.004, "%.2fms");
	);

	delayms;
);

function labelledswitch(value, title, ontext, offtext) (
	titleabove(title);
	ui_push_height(DIAL_HEIGHT*0.7);
		ui_push_width(DIAL_HEIGHT*1.25);
			value = control_switch(value);
		ui_pop();
	ui_pop();
	readoutbelow(0, value ? ontext : offtext);
	value;
);

control_start("main", "tron");

ui_screen() == "main" ? (
	control_navbar("Stereo Alignment Delay", -1, -1);

	ui_pad();

	ui_split_bottomtext(-1);
		control_button("detect") ? (
			ui_screen_open("delay-analysis");
			action_delay_analysis_reset = 1;
		);
	ui_pop();
	ui_padbottom();

	ui_push_height(160);
		control_group("");

		ui_split_leftratio(1/4);
			delay_ms_l = delaydial(delay_ms_l, "Left");
			delay_linked ? delay_ms_r = delay_ms_l;
		ui_split_next();
			delay_ms_r = delaydial(delay_ms_r, "Right");
			delay_linked ? delay_ms_l = delay_ms_r;
		ui_split_next();
			delay_linked = labelledswitch(delay_linked, "L/R link", "on", "off");
		ui_split_next();
			display_units_in_samples = labelledswitch(display_units_in_samples, "Units", "samples", "ms");
		ui_pop();
	ui_pop();
) : ui_screen() == "delay-analysis" ? (
	control_dialog("Delay analysis", gfx_w*0.9, gfx_h*0.8, "correct", "cancel") == 1 ? (
		delay_samples >= 0 ? (
			delay_ms_l = 0;
			delay_ms_r = delay_samples*1000/srate;
		) : (
			delay_ms_l = -delay_samples*1000/srate;
			delay_ms_r = 0;
		);
		delay_linked = 0;
	);

	control_background_technical();
       ui_graph_step(delay_bufferSum, delay_bufferlength, 1, 0, 0);
       ui_hover() ? (
		mouse_sample = ceil((ui_mouse_xratio() - 0.5)*delay_bufferlength);
		ui_align(1, 1);
		ui_textnumber(mouse_sample, "%i samples");
		ui_align(0, 1);
		ui_textnumber(mouse_sample/srate*1000, "%fms");

		ui_colora(255, 255, 255, 0.5);
		gfx_line(mouse_x, ui_top(), mouse_x, ui_bottom());
       );

	ui_push();
		ui_color(255, 255, 255);
		ui_align(delay_samples >= delay_bufferlength*0.1 ? 0 : 1, 0);
		ui_split_top(gfx_texth);
			g_ms = delay_samples/srate*1000;
			g_ms >= 0 ? (
				ui_textnumber(g_ms, "Ch1 is %fms ahead");
			) : (
				ui_textnumber(-g_ms, "Ch0 is %fms ahead");
			);
		ui_pop();
		ui_split_top(gfx_texth);
			ui_textnumber(delay_samples, "(peak at %i samples)");
		ui_pop();
		ui_split_top(gfx_texth);
			ui_text(delay_phase > 0 ? "Phase: aligned" : "Phase: inverted");
		ui_pop();
	ui_pop();

       control_finish_technical();
) : control_system();

@serialize

// Do nothing, but prevent it from zeroing out our memory
tmp = tmp;
