@init

function sinh(x) local(e_x) (
	e_x = exp(x);
	x > 20 ? (
		exp(x)*0.5;
	) : x < -20 ? (
		0.5*exp(-x);
	) : (
		e_x = exp(-x);
		(e_x + 1/e_x)*0.5;
	);
);

function filter_buffer_size() (
	FILTER#;
);

function filter_buffer_init(freemem) local(obj) (
	obj = freemem;
	obj[FILTER#A1] = 0;
	obj[FILTER#A2] = 0;
	obj[FILTER#B0] = 1;
	obj[FILTER#B1] = 0;
	obj[FILTER#B2] = 0;
	obj[FILTER#X1] = 0;
	obj[FILTER#X2] = 0;
	obj[FILTER#Y1] = 0;
	obj[FILTER#Y2] = 0;
	freemem + FILTER#;
);

function filter_buffer_lowpass(obj, freq, BW) local(inv_a0, b0, w0, sin_w0, Q, alpha) (
	w0 = 2*$pi*freq/srate;
	sin_w0 = sin(w0);
	cos_w0 = cos(w0);
	Q = 0.5/sinh(log(2)*0.5*BW*w0/sin_w0);
	alpha = sin_w0*0.5/Q;
	
	inv_a0 = 1/(1 + alpha);
	obj[FILTER#A1] = -2*cos_w0*inv_a0;
	obj[FILTER#A2] = (1 - alpha)*inv_a0;
	b0 = obj[FILTER#B0] = (1 - cos_w0)*0.5*inv_a0;
	obj[FILTER#B1] = 2*b0;
	obj[FILTER#B2] = b0;
);

function filter_buffer_highshelf_gainslope(obj, freq, gainFactor, slope) local(A, inv_a0, b0, w0, sin_w0, Q, alpha) (
	A = gainFactor*gainFactor;
	w0 = 2*$pi*freq/srate;
	sin_w0 = sin(w0);
	cos_w0 = cos(w0);
	
	Q = 1/sqrt((A + 1/A)*(1/slope - 1) + 2);
	alpha = sin_w0*0.5/Q;
	sqrtA2alpha = 2*gainFactor*alpha;
	
	inv_a0 = 1/((A + 1) - (A - 1)*cos_w0 + sqrtA2alpha);
	obj[FILTER#A1] = 2*((A - 1) - (A + 1)*cos_w0)*inv_a0;
	obj[FILTER#A2] = ((A + 1) - (A - 1)*cos_w0 - sqrtA2alpha)*inv_a0;
	obj[FILTER#B0] = A*((A + 1) + (A - 1)*cos_w0 + sqrtA2alpha)*inv_a0;
	obj[FILTER#B1] = -2*A*((A - 1) + (A + 1)*cos_w0)*inv_a0;
	obj[FILTER#B2] = A*((A + 1) + (A - 1)*cos_w0 - sqrtA2alpha)*inv_a0;
);

function filter_buffer_highshelf_gainband(obj, freq, gainFactor, BW) local(A, inv_a0, b0, w0, sin_w0, Q, alpha) (
	A = gainFactor*gainFactor;
	w0 = 2*$pi*freq/srate;
	sin_w0 = sin(w0);
	cos_w0 = cos(w0);
	
	Q = 0.5/sinh(log(2)*0.5*BW*w0/sin_w0);
	alpha = sin_w0*0.5/Q;
	sqrtA2alpha = 2*gainFactor*alpha;
	
	inv_a0 = 1/((A + 1) - (A - 1)*cos_w0 + sqrtA2alpha);
	obj[FILTER#A1] = 2*((A - 1) - (A + 1)*cos_w0)*inv_a0;
	obj[FILTER#A2] = ((A + 1) - (A - 1)*cos_w0 - sqrtA2alpha)*inv_a0;
	obj[FILTER#B0] = A*((A + 1) + (A - 1)*cos_w0 + sqrtA2alpha)*inv_a0;
	obj[FILTER#B1] = -2*A*((A - 1) + (A + 1)*cos_w0)*inv_a0;
	obj[FILTER#B2] = A*((A + 1) + (A - 1)*cos_w0 - sqrtA2alpha)*inv_a0;
);

function filter_buffer_sample(obj, x0) local(y0) (
	y0 = obj[FILTER#B0]*x0 + obj[FILTER#B1]*obj[FILTER#X1] + obj[FILTER#B2]*obj[FILTER#X2] - obj[FILTER#A1]*obj[FILTER#Y1] - obj[FILTER#A2]*obj[FILTER#Y2];
	obj[FILTER#Y2] = obj[FILTER#Y1];
	obj[FILTER#Y1] = y0;
	obj[FILTER#X2] = obj[FILTER#X1];
	obj[FILTER#X1] = x0;
	y0;
);